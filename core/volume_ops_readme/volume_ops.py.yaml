apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: volumeop-basic-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 0.5.1, pipelines.kubeflow.org/pipeline_compilation_time: '2020-06-21T18:20:09.568392',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "A Basic Example on VolumeOp
      Usage.", "inputs": [{"name": "size"}], "name": "VolumeOp Basic"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 0.5.1}
spec:
  entrypoint: volumeop-basic
  templates:
  - name: cop
    container:
      args: [echo foo > /mnt/file1]
      command: [sh, -c]
      image: library/bash:4.4.23
      volumeMounts:
      - {mountPath: /mnt, name: create-pvc}
    inputs:
      parameters:
      - {name: create-pvc-name}
    metadata:
      labels: {pipelines.kubeflow.org/pipeline-sdk-type: kfp}
    volumes:
    - name: create-pvc
      persistentVolumeClaim: {claimName: '{{inputs.parameters.create-pvc-name}}'}
  - name: create-pvc
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: '{{workflow.name}}-my-pvc'
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: '{{inputs.parameters.size}}'
    inputs:
      parameters:
      - {name: size}
    outputs:
      parameters:
      - name: create-pvc-manifest
        valueFrom: {jsonPath: '{}'}
      - name: create-pvc-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: create-pvc-size
        valueFrom: {jsonPath: '{.status.capacity.storage}'}
    metadata:
      labels: {pipelines.kubeflow.org/pipeline-sdk-type: kfp}
  - name: volumeop-basic
    inputs:
      parameters:
      - {name: size}
    dag:
      tasks:
      - name: cop
        template: cop
        dependencies: [create-pvc]
        arguments:
          parameters:
          - {name: create-pvc-name, value: '{{tasks.create-pvc.outputs.parameters.create-pvc-name}}'}
      - name: create-pvc
        template: create-pvc
        arguments:
          parameters:
          - {name: size, value: '{{inputs.parameters.size}}'}
  arguments:
    parameters:
    - {name: size}
  serviceAccountName: pipeline-runner
