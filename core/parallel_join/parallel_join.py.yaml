apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: parallel-pipeline-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 0.5.1, pipelines.kubeflow.org/pipeline_compilation_time: '2020-06-21T17:29:39.489882',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Download two messages
      in parallel and prints the concatenated result.", "inputs": [{"default": "gs://ml-pipeline/sample-data/shakespeare/shakespeare1.txt",
      "name": "url1", "optional": true}, {"default": "gs://ml-pipeline/sample-data/shakespeare/shakespeare2.txt",
      "name": "url2", "optional": true}], "name": "Parallel pipeline"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 0.5.1}
spec:
  entrypoint: parallel-pipeline
  templates:
  - name: echo
    container:
      args: ['echo "Text 1: $0"; echo "Text 2: $1"', '{{inputs.parameters.gcs-download-data}}',
        '{{inputs.parameters.gcs-download-2-data}}']
      command: [sh, -c]
      image: library/bash:4.4.23
    inputs:
      parameters:
      - {name: gcs-download-2-data}
      - {name: gcs-download-data}
    metadata:
      labels: {pipelines.kubeflow.org/pipeline-sdk-type: kfp}
  - name: gcs-download
    container:
      args: [gsutil cat $0 | tee $1, '{{inputs.parameters.url1}}', /tmp/results.txt]
      command: [sh, -c]
      image: google/cloud-sdk:279.0.0
    inputs:
      parameters:
      - {name: url1}
    outputs:
      parameters:
      - name: gcs-download-data
        valueFrom: {path: /tmp/results.txt}
      artifacts:
      - {name: gcs-download-data, path: /tmp/results.txt}
    metadata:
      labels: {pipelines.kubeflow.org/pipeline-sdk-type: kfp}
  - name: gcs-download-2
    container:
      args: [gsutil cat $0 | tee $1, '{{inputs.parameters.url2}}', /tmp/results.txt]
      command: [sh, -c]
      image: google/cloud-sdk:279.0.0
    inputs:
      parameters:
      - {name: url2}
    outputs:
      parameters:
      - name: gcs-download-2-data
        valueFrom: {path: /tmp/results.txt}
      artifacts:
      - {name: gcs-download-2-data, path: /tmp/results.txt}
    metadata:
      labels: {pipelines.kubeflow.org/pipeline-sdk-type: kfp}
  - name: parallel-pipeline
    inputs:
      parameters:
      - {name: url1}
      - {name: url2}
    dag:
      tasks:
      - name: echo
        template: echo
        dependencies: [gcs-download, gcs-download-2]
        arguments:
          parameters:
          - {name: gcs-download-2-data, value: '{{tasks.gcs-download-2.outputs.parameters.gcs-download-2-data}}'}
          - {name: gcs-download-data, value: '{{tasks.gcs-download.outputs.parameters.gcs-download-data}}'}
      - name: gcs-download
        template: gcs-download
        arguments:
          parameters:
          - {name: url1, value: '{{inputs.parameters.url1}}'}
      - name: gcs-download-2
        template: gcs-download-2
        arguments:
          parameters:
          - {name: url2, value: '{{inputs.parameters.url2}}'}
  arguments:
    parameters:
    - {name: url1, value: 'gs://ml-pipeline/sample-data/shakespeare/shakespeare1.txt'}
    - {name: url2, value: 'gs://ml-pipeline/sample-data/shakespeare/shakespeare2.txt'}
  serviceAccountName: pipeline-runner
